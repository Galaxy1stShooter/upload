// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: delay.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "delay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace delayMessage {

namespace {

const ::google::protobuf::Descriptor* DelayMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelayMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_delay_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_delay_2eproto() {
  protobuf_AddDesc_delay_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "delay.proto");
  GOOGLE_CHECK(file != NULL);
  DelayMsg_descriptor_ = file->message_type(0);
  static const int DelayMsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, send_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, uav_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, lon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, alt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, vz_),
  };
  DelayMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DelayMsg_descriptor_,
      DelayMsg::default_instance_,
      DelayMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(DelayMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayMsg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_delay_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DelayMsg_descriptor_, &DelayMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_delay_2eproto() {
  delete DelayMsg::default_instance_;
  delete DelayMsg_reflection_;
}

void protobuf_AddDesc_delay_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_delay_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013delay.proto\022\014delayMessage\"\210\001\n\010DelayMsg"
    "\022\016\n\006msg_id\030\001 \001(\r\022\021\n\tsend_time\030\002 \001(\001\022\016\n\006u"
    "av_id\030\003 \001(\r\022\013\n\003lat\030\004 \001(\001\022\013\n\003lon\030\005 \001(\001\022\013\n"
    "\003alt\030\006 \001(\001\022\n\n\002vx\030\007 \001(\001\022\n\n\002vy\030\010 \001(\001\022\n\n\002vz"
    "\030\t \001(\001b\006proto3", 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "delay.proto", &protobuf_RegisterTypes);
  DelayMsg::default_instance_ = new DelayMsg();
  DelayMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_delay_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_delay_2eproto {
  StaticDescriptorInitializer_delay_2eproto() {
    protobuf_AddDesc_delay_2eproto();
  }
} static_descriptor_initializer_delay_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelayMsg::kMsgIdFieldNumber;
const int DelayMsg::kSendTimeFieldNumber;
const int DelayMsg::kUavIdFieldNumber;
const int DelayMsg::kLatFieldNumber;
const int DelayMsg::kLonFieldNumber;
const int DelayMsg::kAltFieldNumber;
const int DelayMsg::kVxFieldNumber;
const int DelayMsg::kVyFieldNumber;
const int DelayMsg::kVzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelayMsg::DelayMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:delayMessage.DelayMsg)
}

void DelayMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DelayMsg::DelayMsg(const DelayMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:delayMessage.DelayMsg)
}

void DelayMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msg_id_ = 0u;
  send_time_ = 0;
  uav_id_ = 0u;
  lat_ = 0;
  lon_ = 0;
  alt_ = 0;
  vx_ = 0;
  vy_ = 0;
  vz_ = 0;
}

DelayMsg::~DelayMsg() {
  // @@protoc_insertion_point(destructor:delayMessage.DelayMsg)
  SharedDtor();
}

void DelayMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DelayMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelayMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelayMsg_descriptor_;
}

const DelayMsg& DelayMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_delay_2eproto();
  return *default_instance_;
}

DelayMsg* DelayMsg::default_instance_ = NULL;

DelayMsg* DelayMsg::New(::google::protobuf::Arena* arena) const {
  DelayMsg* n = new DelayMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelayMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:delayMessage.DelayMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DelayMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DelayMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_time_, vy_);
  vz_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool DelayMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:delayMessage.DelayMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_send_time;
        break;
      }

      // optional double send_time = 2;
      case 2: {
        if (tag == 17) {
         parse_send_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &send_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uav_id;
        break;
      }

      // optional uint32 uav_id = 3;
      case 3: {
        if (tag == 24) {
         parse_uav_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uav_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_lat;
        break;
      }

      // optional double lat = 4;
      case 4: {
        if (tag == 33) {
         parse_lat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_lon;
        break;
      }

      // optional double lon = 5;
      case 5: {
        if (tag == 41) {
         parse_lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_alt;
        break;
      }

      // optional double alt = 6;
      case 6: {
        if (tag == 49) {
         parse_alt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_vx;
        break;
      }

      // optional double vx = 7;
      case 7: {
        if (tag == 57) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_vy;
        break;
      }

      // optional double vy = 8;
      case 8: {
        if (tag == 65) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_vz;
        break;
      }

      // optional double vz = 9;
      case 9: {
        if (tag == 73) {
         parse_vz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vz_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:delayMessage.DelayMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:delayMessage.DelayMsg)
  return false;
#undef DO_
}

void DelayMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:delayMessage.DelayMsg)
  // optional uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_id(), output);
  }

  // optional double send_time = 2;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->send_time(), output);
  }

  // optional uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uav_id(), output);
  }

  // optional double lat = 4;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lat(), output);
  }

  // optional double lon = 5;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lon(), output);
  }

  // optional double alt = 6;
  if (this->alt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->alt(), output);
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vx(), output);
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vy(), output);
  }

  // optional double vz = 9;
  if (this->vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vz(), output);
  }

  // @@protoc_insertion_point(serialize_end:delayMessage.DelayMsg)
}

::google::protobuf::uint8* DelayMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:delayMessage.DelayMsg)
  // optional uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_id(), target);
  }

  // optional double send_time = 2;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->send_time(), target);
  }

  // optional uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uav_id(), target);
  }

  // optional double lat = 4;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lat(), target);
  }

  // optional double lon = 5;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lon(), target);
  }

  // optional double alt = 6;
  if (this->alt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->alt(), target);
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->vx(), target);
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vy(), target);
  }

  // optional double vz = 9;
  if (this->vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vz(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:delayMessage.DelayMsg)
  return target;
}

int DelayMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:delayMessage.DelayMsg)
  int total_size = 0;

  // optional uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  // optional double send_time = 2;
  if (this->send_time() != 0) {
    total_size += 1 + 8;
  }

  // optional uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uav_id());
  }

  // optional double lat = 4;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // optional double lon = 5;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  // optional double alt = 6;
  if (this->alt() != 0) {
    total_size += 1 + 8;
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    total_size += 1 + 8;
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    total_size += 1 + 8;
  }

  // optional double vz = 9;
  if (this->vz() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelayMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:delayMessage.DelayMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DelayMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DelayMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:delayMessage.DelayMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:delayMessage.DelayMsg)
    MergeFrom(*source);
  }
}

void DelayMsg::MergeFrom(const DelayMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:delayMessage.DelayMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
  if (from.uav_id() != 0) {
    set_uav_id(from.uav_id());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.alt() != 0) {
    set_alt(from.alt());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.vz() != 0) {
    set_vz(from.vz());
  }
}

void DelayMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:delayMessage.DelayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelayMsg::CopyFrom(const DelayMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:delayMessage.DelayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelayMsg::IsInitialized() const {

  return true;
}

void DelayMsg::Swap(DelayMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelayMsg::InternalSwap(DelayMsg* other) {
  std::swap(msg_id_, other->msg_id_);
  std::swap(send_time_, other->send_time_);
  std::swap(uav_id_, other->uav_id_);
  std::swap(lat_, other->lat_);
  std::swap(lon_, other->lon_);
  std::swap(alt_, other->alt_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  std::swap(vz_, other->vz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelayMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelayMsg_descriptor_;
  metadata.reflection = DelayMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelayMsg

// optional uint32 msg_id = 1;
void DelayMsg::clear_msg_id() {
  msg_id_ = 0u;
}
 ::google::protobuf::uint32 DelayMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.msg_id)
  return msg_id_;
}
 void DelayMsg::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.msg_id)
}

// optional double send_time = 2;
void DelayMsg::clear_send_time() {
  send_time_ = 0;
}
 double DelayMsg::send_time() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.send_time)
  return send_time_;
}
 void DelayMsg::set_send_time(double value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.send_time)
}

// optional uint32 uav_id = 3;
void DelayMsg::clear_uav_id() {
  uav_id_ = 0u;
}
 ::google::protobuf::uint32 DelayMsg::uav_id() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.uav_id)
  return uav_id_;
}
 void DelayMsg::set_uav_id(::google::protobuf::uint32 value) {
  
  uav_id_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.uav_id)
}

// optional double lat = 4;
void DelayMsg::clear_lat() {
  lat_ = 0;
}
 double DelayMsg::lat() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.lat)
  return lat_;
}
 void DelayMsg::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.lat)
}

// optional double lon = 5;
void DelayMsg::clear_lon() {
  lon_ = 0;
}
 double DelayMsg::lon() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.lon)
  return lon_;
}
 void DelayMsg::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.lon)
}

// optional double alt = 6;
void DelayMsg::clear_alt() {
  alt_ = 0;
}
 double DelayMsg::alt() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.alt)
  return alt_;
}
 void DelayMsg::set_alt(double value) {
  
  alt_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.alt)
}

// optional double vx = 7;
void DelayMsg::clear_vx() {
  vx_ = 0;
}
 double DelayMsg::vx() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vx)
  return vx_;
}
 void DelayMsg::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vx)
}

// optional double vy = 8;
void DelayMsg::clear_vy() {
  vy_ = 0;
}
 double DelayMsg::vy() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vy)
  return vy_;
}
 void DelayMsg::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vy)
}

// optional double vz = 9;
void DelayMsg::clear_vz() {
  vz_ = 0;
}
 double DelayMsg::vz() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vz)
  return vz_;
}
 void DelayMsg::set_vz(double value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vz)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace delayMessage

// @@protoc_insertion_point(global_scope)
